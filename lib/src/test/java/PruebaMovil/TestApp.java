/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package PruebaMovil;

import static io.appium.java_client.touch.WaitOptions.waitOptions;
import static io.appium.java_client.touch.offset.PointOption.point;
import static java.time.Duration.ofMillis;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Properties;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.MediaEntityBuilder;
import com.aventstack.extentreports.Status;
import com.aventstack.extentreports.markuputils.ExtentColor;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;

import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;

public class TestApp{
   
	private AndroidDriver<MobileElement> driver;
	public WebDriverWait wait;
    
    private WebDriver driverweb;
	RutasGenerales ruta;
	Properties prop = new Properties();
	Excel reader;
    
	ExtentReports reports;
	ExtentHtmlReporter htmlReporter;
    ExtentTest test;
	
	    //Elements By
	    By iniciarSesion = By.xpath("//android.widget.TextView[contains(@text,'Login')]");
	    By signup = By.xpath("//android.view.ViewGroup[@content-desc=\"button-sign-up-container\"]/android.view.ViewGroup/android.widget.TextView");
	    
	    By email = By.xpath("//android.widget.EditText[contains(@text,'Email')]");
	    By pass = By.xpath("//android.widget.EditText[contains(@text,'Password')]");
	    By confpass = By.xpath("//android.widget.EditText[contains(@text,'Confirm password')]");
	    By sign = By.xpath("//android.widget.TextView[contains(@text,'SIGN UP')]");
	    By ok = By.xpath("//android.widget.Button[contains(@text,'OK')]");
	    
	    By login = By.xpath("//android.view.ViewGroup[@content-desc=\"button-login-container\"]/android.view.ViewGroup/android.widget.TextView");
	    By presslogin = By.xpath("//android.widget.TextView[contains(@text,'LOGIN')]");
	    
	    By forms = By.xpath("//android.widget.TextView[contains(@text,'Forms')]");
	    By type = By.xpath("//android.widget.EditText[contains(@text,'Type something')]");
	    By combo = By.xpath("//android.widget.TextView[contains(@text,'Select a value here')]");
	    By selectcombo = By.xpath("//android.widget.CheckedTextView[contains(@text,'Appium is awesome')]");
	    By active = By.xpath("//android.widget.TextView[contains(@text,'Active')]");
	    
	    By web = By.xpath("//android.widget.TextView[contains(@text,'WebView')]");
	    By buscar = By.xpath("//android.widget.Button[contains(@text,'Search')]");
	    By editbuscar = By.id("docsearch-input");
	    
	    
	 @BeforeTest
	    public void startTest() {
	    	
	    			reports = new ExtentReports();
	                htmlReporter = new ExtentHtmlReporter(System.getProperty("user.dir") + "//test-output//Test.html");
	                reports.attachReporter(htmlReporter);
	                
	                reports.setSystemInfo("Eclipse", "Java");
	                reports.setSystemInfo("Selenium", "WebDriver");
	                reports.setSystemInfo("ExtentReport", "Integration");
	                reports.setSystemInfo("Browser", "Google Chrome");
	    }
	
    @BeforeMethod
    public void setup() throws FileNotFoundException, IOException {
    	
        ruta = new RutasGenerales();
    	
        DesiredCapabilities caps = new DesiredCapabilities();
        caps.setCapability("deviceName", "AOSP on IA Emulator");
        caps.setCapability("udid", "emulator-5554"); //DeviceId from "adb devices" command
        caps.setCapability("platformName", "Android");
        caps.setCapability("platformVersion", "9.0");
        caps.setCapability("skipUnlock", "true");
        caps.setCapability("appPackage", "com.wdiodemoapp");
        caps.setCapability("appActivity", "com.wdiodemoapp.MainActivity");
        caps.setCapability("noReset", "false");
        driver = new AndroidDriver<MobileElement>(new URL("http://127.0.0.1:4723/wd/hub"), caps);
        wait = new WebDriverWait(driver, 40);
        
       
    }
    
    @Test
    public void basicTest() throws InterruptedException, IOException {
        
    				
    				try {
    					
    					wait.until(ExpectedConditions.visibilityOfElementLocated(iniciarSesion)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(signup)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(email)).sendKeys("correo@correo.com");
    					wait.until(ExpectedConditions.visibilityOfElementLocated(pass)).sendKeys("12345678");
    					wait.until(ExpectedConditions.visibilityOfElementLocated(confpass)).sendKeys("12345678");
    					wait.until(ExpectedConditions.visibilityOfElementLocated(sign)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(ok)).click();
    					
    					// CAPTURA
    					File source = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
    					File file = new File("src/../Images/" + System.currentTimeMillis()+ ".png");
    					String pathh = file.getAbsolutePath();
    				    FileUtils.copyFile(source, new File(pathh));

    					wait.until(ExpectedConditions.visibilityOfElementLocated(login)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(presslogin)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(ok)).click();
    					
    					// CAPTURA
    					File source1 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
    					File file1 = new File("src/../Images/" + System.currentTimeMillis()+ ".png");
    					String pathh1 = file1.getAbsolutePath();
    				    FileUtils.copyFile(source1, new File(pathh1));
    					
    					wait.until(ExpectedConditions.visibilityOfElementLocated(forms)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(type)).sendKeys("tipo activo");
    					wait.until(ExpectedConditions.visibilityOfElementLocated(combo)).click();
    					verticalSwipeByPercentages(0.6, 0.3, 0.5);
    					wait.until(ExpectedConditions.visibilityOfElementLocated(selectcombo)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(active)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(ok)).click();

    					// CAPTURA
    					File source2 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
    					File file2 = new File("src/../Images/" + System.currentTimeMillis()+ ".png");
    					String pathh2 = file2.getAbsolutePath();
    				    FileUtils.copyFile(source2, new File(pathh2));
    					
    					wait.until(ExpectedConditions.visibilityOfElementLocated(web)).click();   
    					wait.until(ExpectedConditions.visibilityOfElementLocated(buscar)).click();
    					wait.until(ExpectedConditions.visibilityOfElementLocated(editbuscar)).sendKeys("browser");

    					
    					// CAPTURA
    					File source3 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
    					File file3 = new File("src/../Images/" + System.currentTimeMillis()+ ".png");
    					String pathh3 = file3.getAbsolutePath();
    				    FileUtils.copyFile(source3, new File(pathh3));
    				    
    				    test.log(Status.PASS,MarkupHelper.createLabel("Pass Test ", ExtentColor.GREEN));
    		    	   	test.log(Status.INFO,"Sign up", MediaEntityBuilder.createScreenCaptureFromPath(pathh).build());
    		    	   	test.log(Status.INFO,"Login", MediaEntityBuilder.createScreenCaptureFromPath(pathh1).build());
    		    		test.log(Status.INFO,"Activar", MediaEntityBuilder.createScreenCaptureFromPath(pathh2).build());
    		    		test.log(Status.INFO,"Buscar", MediaEntityBuilder.createScreenCaptureFromPath(pathh3).build());
    		    	   	reports.flush();
    				    
    					}catch(Exception e){
    						
    						// CAPTURA
    						File source3 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
    						File file3 = new File("src/../Images/" + System.currentTimeMillis()+ ".png");
    						String pathh3 = file3.getAbsolutePath();
    						FileUtils.copyFile(source3, new File(pathh3));
    						
    						test.log(Status.FAIL, MarkupHelper.createLabel("Fail Test ", ExtentColor.RED));
    						test.log(Status.INFO,"Error:" +e, MediaEntityBuilder.createScreenCaptureFromPath(pathh3).build()); 
    		 				reports.flush();
    		 				System.out.println(e);
    						
    			}		
        
    }
    
	
    @AfterMethod
    public void teardown() {
        driver.quit();
    }
    
    
    
    public void verticalSwipeByPercentages(double startPercentage, double endPercentage, double anchorPercentage) {
        Dimension size = driver.manage().window().getSize();
        int anchor = (int) (size.width * anchorPercentage);
        int startPoint = (int) (size.height * startPercentage);
        int endPoint = (int) (size.height * endPercentage);

        new TouchAction(driver)
            .press(point(anchor, startPoint))
            .waitAction(waitOptions(ofMillis(1000)))
            .moveTo(point(anchor, endPoint))
            .release().perform();
    }
	
}
